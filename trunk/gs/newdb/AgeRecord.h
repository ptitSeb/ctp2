
/*
 * DO NOT EDIT THIS FILE!
 * It is generated automatically by ctpdb
 */
#ifndef __Age_RECORD_H__
#define __Age_RECORD_H__

/*
 * Age description
 */
#include "CTPRecord.h"
//
// Range definitions

/*
 * DO NOT EDIT THIS FILE!
 * It is generated automatically by ctpdb
 */

class AgeRecord : public CTPRecord
{
public:
    typedef sint32 (AgeRecord::*IntAccessor)() const;
    typedef bool (AgeRecord::*BoolAccessor)() const;
    typedef double (AgeRecord::*FloatAccessor)() const ;
    typedef bool (AgeRecord::*BitIntAccessor)(sint32 &val) const;
    typedef bool (AgeRecord::*BitFloatAccessor)(double &val) const;
private:
    sint32            m_Age;
    sint32            m_StartingRound;
    sint32            m_NeedAdvances;
    char            * m_SlicObject;

public:
    AgeRecord() { Init(); };
    ~AgeRecord();
    Init();
    // These methods are needed for records to conform to
    // 'Orthodox Cannonical Form' and work with resizing STL vectors. 
    AgeRecord(const AgeRecord &rval) { Init(); *this = rval; }
    void operator=(const AgeRecord &rval);

    void CheckRequiredFields(DBLexer *lex);
    sint32 Parse(DBLexer *lex);

    void ResolveDBReferences();
    void Merge(const AgeRecord & rval);
    //
    // Accessors
    //
    sint32           GetAge() const { return m_Age; }
    sint32           GetStartingRound() const { return m_StartingRound; }
    sint32           GetNeedAdvances() const { return m_NeedAdvances; }
    const char      *GetSlicObject() const { return m_SlicObject; }
}; /* AgeRecord */

struct AgeRecordAccessorInfo {
    AgeRecord::IntAccessor m_intAccessor;
    AgeRecord::BoolAccessor m_boolAccessor;
    AgeRecord::FloatAccessor m_floatAccessor;
    AgeRecord::BitIntAccessor m_bitIntAccessor;
    AgeRecord::BitFloatAccessor m_bitFloatAccessor;
};
extern AgeRecordAccessorInfo g_AgeRecord_Accessors[];
extern char *g_Age_Tokens[];
#define k_Num_AgeRecord_Tokens 4

template <class T> class CTPDatabase;
extern CTPDatabase<AgeRecord> *g_theAgeDB;

#endif /* ifndef __Age_RECORD_H__ */
